{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","crypto","setCrypto","img","setImage","name","setName","symbol","setSymbol","link","setLink","ind","setInd","usd","setUsd","desc","setDesc","style","backgroundColor","minHeight","className","type","placeholder","value","onChange","e","target","required","onClick","url","axios","get","then","res","resData","data","image","large","links","homepage","market_data","current_price","inr","JSON","stringify","description","en","claasName","src","width","href","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAsEeA,MA9Df,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACPC,EADO,KACCC,EADD,OAESF,mBAAS,IAFlB,mBAENG,EAFM,KAEFC,EAFE,OAGSJ,mBAAS,IAHlB,mBAGNK,EAHM,KAGDC,EAHC,OAIaN,mBAAS,IAJtB,mBAINO,EAJM,KAICC,EAJD,OAKQR,mBAAS,IALjB,mBAKPS,EALO,KAKFC,EALE,OAMMV,mBAAS,IANf,mBAMNW,EANM,KAMFC,EANE,OAOMZ,mBAAS,IAPf,mBAOPa,EAPO,KAOHC,EAPG,OAQSd,mBAAS,IARlB,mBAQNe,EARM,KAQDC,EARC,KA0Bb,OACE,sBAAKC,MAAO,CAACC,gBAAiB,UAAWC,UAAW,SAAWC,UAAU,MAAzE,UACE,oBAAIA,UAAW,cAAf,mCACA,qBAAKA,UAAU,gCAAf,SACE,qBAAKA,UAAU,gBAAf,SAEE,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,2BACxDC,MAAOtB,EAASuB,SAAU,SAACC,GAAD,OAAOvB,EAAWuB,EAAEC,OAAOH,QAASI,UAAQ,QAI1E,wBAAQC,QA3BQ,WACnB,IAAMC,EAAM,0CAA4C5B,EACxD6B,IAAMC,IAAIF,GAAKG,MAAK,SAAAC,GAClB,IAAMC,EAAUD,EAAIE,KACpB/B,EAAS8B,EAAQE,MAAMC,OACvB/B,EAAQ4B,EAAQ7B,MAChBK,EAAQwB,EAAQI,MAAMC,SAAS,IAC/B/B,EAAU0B,EAAQ3B,QAClBK,EAAO,uBAAkBsB,EAAQM,YAAYC,cAAcC,KAC3D5B,EAAO,cAAcoB,EAAQM,YAAYC,cAAc5B,KACvDG,EAAQ2B,KAAKC,UAAUV,EAAQW,YAAYC,SAiBX1B,UAAU,8BAAzC,oBACA,sBAAK2B,UAAU,qDAAf,UACE,sBAAK3B,UAAU,kCAAf,UACE,qBAAK4B,IAAK7C,EAAK8C,MAAM,QACrB,uBACA,oBAAI7B,UAAU,aAAd,SAA4Bf,IAC5B,6BAAKE,IACL,6BAAI,mBAAGa,UAAU,aAAa8B,KAAMzC,EAAhC,SAAuCA,MAC3C,uBACA,6BAAKE,IACL,6BAAKE,OAGP,qBAAKO,UAAU,8BAAf,SACE,qBAAK+B,wBA3BL,CAACC,OAAOrC,cCpBHsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3d2cdceb.chunk.js","sourcesContent":["import './App.css'\nimport React, {useState} from 'react'\nimport axios from 'axios'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\n\n\n\nfunction App() {\n  const[crypto, setCrypto] = useState('')\n  const [img,setImage]= useState('')\n  const [name,setName]= useState('')\n  const [symbol,setSymbol]= useState('')\n  const[link,setLink]= useState('')\n   const[ind,setInd]=useState('')\n  const[usd,setUsd]= useState('')\n  const [desc,setDesc]= useState('')\n\n  const handleSubmit =()=> {\n   const url = \"https://api.coingecko.com/api/v3/coins/\" + crypto;\n   axios.get(url).then(res => {\n     const resData = res.data\n     setImage(resData.image.large)\n     setName(resData.name)\n     setLink(resData.links.homepage[0])\n     setSymbol(resData.symbol)\n     setInd(\"Indian price: â‚¹\"+resData.market_data.current_price.inr)\n     setUsd(\"US price: $\"+resData.market_data.current_price.usd)\n     setDesc(JSON.stringify(resData.description.en))\n   })\n  }\n  function createMarkup(){\n    return{__html:desc}\n  }\n  return (\n    <div style={{backgroundColor: \"crimson\", minHeight: \"100vh\" }} className=\"App\">\n      <h1 className= \"bg-info p-4\" >CryptoCurrency Search</h1>\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"col-md-4 mt-5\">\n\n          <input type=\"text\" className=\"form-control\" placeholder=\"Enter The Cryptocurrency\" \n          value={crypto}  onChange={(e) => setCrypto (e.target.value)}  required/>\n\n        </div>\n      </div>\n      <button onClick={handleSubmit} className=\"btn btn-secondary px-5 mt-4\">Submit</button>\n      <div claasName=\"mt-5 container-fuild d-flex justify-content-center\">\n        <div className=\"col-md-4 bg-success p-2 rounded\">\n          <img src={img} width=\"150\" />\n          <br/>\n          <h1 className=\"text=white\">{name}</h1>\n          <h2>{symbol}</h2>\n          <h2><a className=\"text-white\" href={link}>{link}</a></h2>\n          <br/>\n          <h2>{ind}</h2>\n          <h2>{usd}</h2>\n\n        </div>\n        <div className=\"text-white col-md-8 my-auto\">\n          <div dangerouslySetInnerHTML={createMarkup()}>\n\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}